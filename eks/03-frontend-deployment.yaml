apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-frontend
  namespace: healthcare
spec:
  replicas: 2
  selector:
    matchLabels:
      app: healthcare-frontend
  template:
    metadata:
      labels:
        app: healthcare-frontend
    spec:
      containers:
        - name: frontend
          image: <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_REGION>.amazonaws.com/healthcare-frontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-frontend
  namespace: healthcare
spec:
  type: NodePort
  selector:
    app: healthcare-frontend
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: healthcare-ingress
  namespace: healthcare
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/healthcheck-path: /
spec:
  rules:
    - host: example.healthcare-app.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: healthcare-frontend
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: healthcare-backend
                port:
                  number: 8000
